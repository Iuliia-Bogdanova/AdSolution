// если выполнение кода требуется только при определенном условии - инструкция if с условным оператором "?" и блоком else 
// код выполняется, если условие внутри () возвращает true 
// код не выполняется, если условие внутри () возвращает false

let message = "Привет, фрилансер!"; // выводим в консоль только если выполнится некое условие - true или false 
if (2 > 1) { // это true, поэтому в консоль выводится message
    console.log(message);
}
if (4 > 5) { //  false, в консоль не выводится
    console.log(message);
}

// в качестве операндов могут быть переменные с привоенными предварительно значениями:
let first = 5;
let second = 10;

if (first === second) {
    console.log(message);
}
//условие может быть любым, главное - ответ true или false
if (2 + 1 === 3 && "1" == 1 || 10 >5 && 10 === 1) { // результат выражения true, message в консоль выводится
    console.log(message);
}

// преобразование в булевый тип:
if ("") { // пустая строка false, не выполнится
    console.log(message);
}
if (" ") { // пустая строка с пробелом уже не пустая true, выполнится
    console.log(message);
}
if (0) { // 0 это false, не выполнится
    console.log(message);
}

if (1) { // 1 это true, выполнится
    console.log(message);
}

// возможна короткая запись без {} - если нужно выполнить только 1 инструкцию
if (2 > 1) console.log(message);

// БЛОКИ ELSE и ELSE IF
let number = 5;

if (number > 10) {
    console.log(message); //выводим если true 
} else {
    console.log('Условие не выполнено :('); // выводим если false
}

// проверяем несколько условий (необязательные блоки, используются при необходимости)
if (number > 50) {
    console.log('5 больше 50'); 
} else if (number > 30) {
    console.log('5 больше 30'); 
} else if (number > 10) {
    console.log('5 больше 10'); 
} else if (number > 1) {
    console.log('5 больше 1'); // только это true
} else {
    console.log('Условие не выполнено :('); 
}

// УСЛОВНЫЙ ОПЕРАТОР "?" - применяем, только тогда, когда нам нужно вернуть одно или другое значение

// классическое условное ветвление:
let mmessage = "Привет";
/*
let mmessageEnd;

if (5 > 10) {
    mmessageEnd = ", Вася!"; // если true 
} else {
    mmessageEnd = ", Оля!"; // если false
}

mmessage += mmessageEnd;
console.log(mmessage);
*/
// с помощью условного оператора "?" можем переписать это классическое ветвление (сразу объявляем переменную и через "?" присваиваем ей 1 значение если условие выполняется, затем идет : - аналог else, и 2 значение если условие не выполняется)
let mmessageEnd = (5 > 10) ? ", Вася!" : ", Оля!";

mmessage += mmessageEnd;
console.log(mmessage);

/*
let mmessageEnd = 5 > 10 ? ", Вася!" : ", Оля!";
можем писать без () т к "?" имеет очень низкий приоритет, сначала все равно выполнится условие, затем условный оператор
*/

// "?" - единственный тернарный оператор, у него 3 операнда

// более сложные конструкции:
let messagge = "Привет";
let messaggeEnd;
// запись классическим способом (более читабельна):
if (5 > 50) {
    messaggeEnd = ", Вася!";
} else if (5 > 30) {
    messaggeEnd = ", Оля!";
} else if (5 > 10) {
    messaggeEnd = ", Миша!";
} else if (5 > 1) {
    messaggeEnd = ", Андрей!";
} else {
    messaggeEnd = ", Иннокентий!";
}
// короткая запись:
messaggeEnd = 5 > 50 ? ", Вася!" :
    5 > 30 ? ", Оля!" :
        5 > 10 ? ", Миша!" :
            5 > 100 ? ", Андрей!" : ", Иннокентий!"

messagge += messaggeEnd;
console.log(messagge);

// не стоит использовать условный оператор "?" как полный заменитель if:
/*
5 > 10 ? console.log("Привет, Вася!") :
    console.log ("Привет, Oля!");
    
- это менее понятно, чем:

if (5 > 10) {
    console.log("Привет, Вася!")
} else {
    console.log ("Привет, Oля!");
}
*/